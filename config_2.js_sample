/*
 ThingPlug StarterKit for LoRa version 0.1
 
 Copyright Â© 2016 IoT Tech. Lab of SK Telecom All rights reserved.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.

*/

module.exports = {

  AppEUI : 'starterkittest',                   		// Application EUI
  DevEUI : 'DevEUI',								// Device EUI
  version : 'v1_0',                             	// Application version(Basically v1_0)
  TPhost : 'onem2m.sktiot.com',      				// ThingPlug HOST Addresss
  TPport : '9000',                             		// ThingPlug HTTP PORT(for device_http & application)

  responseAddress : 'http://0.0.0.0:0000',         	// Physical address (mga) of device for controlling the device(for device_http.js)
  responsePORT : '0000',                        	// Physical address (local port) of device for controlling the device(for device_http.js)

  userID : 'userID',                            	// mqttClient username in thingplug portal
  mqttClientId : function(){						// mqttClient client credential ID (ex : ThingPlugID_0002)
	  var POST_FIX = '0002';	  
	  return this.userID+'_'+POST_FIX;    	
  },
  
  nodeID : 'Please Type Your Own LTID',         	// Device's unique ID to identify device (LTID in LoRa)
  passCode : '000101',                          	// Password that will be used when registering device into the portal
  uKey : 'USER KEY FROM PORTAL',                	// USER access token key from Portal(myPage)

  containerName:'LoRa',                         	// Container name that will be created and used in the Starter Kit (define temporarily)
  DevReset : 'DevReset',                        	// Control command (DevReset) that will be created and used in the Starter Kit 
  extDevMgmt : 'extDevMgmt',						// Control command (extDevMgmt) that will be created and used in the Starter Kit
  
  UPDATE_CONTENT_INTERVAL : 1000,					// Term of contentInstance (millisecond)
 
  delimiter : ',',									// contents delimiter (using in app.js & virtual device)
  
  BASE_TEMP : 40,									// virtual value of random Temperature value
  BASE_HUMID : 70,									// virtual value of random Humidity value
  BASE_LUX : 90,									// virtual value of random Brightness value
   
  contents : function(){															// Data from Device(contentInstance Attribute <con>)
	var value_TEMP = (Math.floor(Math.random() * 5) + this.BASE_TEMP).toString();	// Virtual Temp value
	var value_HUMID = (Math.floor(Math.random() * 5) + this.BASE_HUMID).toString();	// Virtual Humidity value
	var value_LUX = (Math.floor(Math.random() * 5) + this.BASE_LUX).toString();		// Virtual Brightness value

	return value_TEMP + this.delimiter + value_HUMID + this.delimiter + value_LUX;
  }
};